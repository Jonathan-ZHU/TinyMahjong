{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;;AAWR,cAAM,EAAC,IAAI;AACX,cAAM,EAAC,IAAI;AACX,kBAAU,EAAC,IAAI;AACf,cAAM,EAAC,IAAI;AACX,gBAAQ,EAAC,IAAI;AACb,aAAK,EAAC,IAAI;KACb;;;AAGD,UAAM,EAAE,kBAAY;AAChB,YAAG,EAAE,CAAC,EAAE,IAAI,IAAI,EAAC;AACb,mBAAO;SACV;AACD,YAAI,CAAC,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AACtC,YAAI,CAAC,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;AACnE,YAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;;AAEvE,YAAI,CAAC,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;AAC7C,YAAI,CAAC,UAAU,GAAG,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;;AAErD,UAAE,CAAC,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,EAAC,IAAI,CAAC,IAAI,EAAC,OAAO,EAAC,cAAc,CAAC,CAAC;AACxE,UAAE,CAAC,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,EAAC,IAAI,CAAC,IAAI,EAAC,OAAO,EAAC,cAAc,CAAC,CAAC;;AAE5E,YAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;AAC3B,UAAE,CAAC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;KACtB;;AAED,gBAAY,EAAC,sBAAS,KAAK,EAAC;AACxB,YAAG,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,QAAQ,EAAC;AAC7B,gBAAG,IAAI,CAAC,KAAK,EAAC;AACV,oBAAI,CAAC,KAAK,EAAE,CAAC;aAChB;SACJ;AACD,YAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;AAC3B,YAAI,CAAC,KAAK,GAAG,IAAI,CAAC;KACrB;;AAED,QAAI,EAAC,cAAS,KAAK,EAAC,OAAO,EAAC,IAAI,EAAC,UAAU,EAAC;AACxC,YAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;AAC1B,YAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAClB,YAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;AAC3B,YAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,OAAO,CAAC;AAC/B,YAAG,UAAU,EAAC;AACV,gBAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC;AAC9B,gBAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;AACrB,gBAAI,CAAC,UAAU,CAAC,CAAC,GAAG,GAAG,CAAC;SAC3B,MACG;AACA,gBAAI,CAAC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC;AAC/B,gBAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;SACrB;KACJ;;AAED,aAAS,EAAC,qBAAU;AAChB,YAAG,EAAE,CAAC,EAAE,EAAC;AACL,cAAE,CAAC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;SACtB;KACJ;;;;;;CAMJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        _alert:null,\n        _btnOK:null,\n        _btnCancel:null,\n        _title:null,\n        _content:null,\n        _onok:null,\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        if(cc.vv == null){\n            return;\n        }\n        this._alert = cc.find(\"Canvas/alert\");\n        this._title = cc.find(\"Canvas/alert/title\").getComponent(cc.Label);\n        this._content = cc.find(\"Canvas/alert/content\").getComponent(cc.Label);\n        \n        this._btnOK = cc.find(\"Canvas/alert/btn_ok\");\n        this._btnCancel = cc.find(\"Canvas/alert/btn_cancel\");\n        \n        cc.vv.utils.addClickEvent(this._btnOK,this.node,\"Alert\",\"onBtnClicked\");\n        cc.vv.utils.addClickEvent(this._btnCancel,this.node,\"Alert\",\"onBtnClicked\");\n        \n        this._alert.active = false;\n        cc.vv.alert = this;\n    },\n    \n    onBtnClicked:function(event){\n        if(event.target.name == \"btn_ok\"){\n            if(this._onok){\n                this._onok();\n            }\n        }\n        this._alert.active = false;\n        this._onok = null;\n    },\n    \n    show:function(title,content,onok,needcancel){\n        this._alert.active = true;\n        this._onok = onok;\n        this._title.string = title;\n        this._content.string = content;\n        if(needcancel){\n            this._btnCancel.active = true;\n            this._btnOK.x = -150;\n            this._btnCancel.x = 150;\n        }\n        else{\n            this._btnCancel.active = false;\n            this._btnOK.x = 0;\n        }\n    },\n    \n    onDestory:function(){\n        if(cc.vv){\n            cc.vv.alert = null;    \n        }\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n"
  ]
}