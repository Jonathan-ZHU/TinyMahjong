{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;AACrB,cAAU,EAAE;AACR,cAAM,EAAC,EAAE,CAAC,IAAI;;;;;;;;;;AAUd,eAAO,EAAC,KAAK;AACb,kBAAU,EAAC,EAAE,CAAC,KAAK;KACtB;;;AAGD,UAAM,EAAE,kBAAY;AAChB,YAAG,EAAE,CAAC,EAAE,IAAI,IAAI,EAAC;AACb,mBAAO,IAAI,CAAC;SACf;;AAED,UAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC;AAChB,YAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;KACnC;;;AAGD,UAAM,EAAE,gBAAU,EAAE,EAAE;AAClB,YAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,GAAC,EAAE,CAAC;KACvD;;AAED,QAAI,EAAC,cAAS,OAAO,EAAC;AAClB,YAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACpB,YAAG,IAAI,CAAC,IAAI,EAAC;AACT,gBAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;SACnC;AACD,YAAG,IAAI,CAAC,UAAU,EAAC;AACf,gBAAG,OAAO,IAAI,IAAI,EAAC;AACf,uBAAO,GAAG,EAAE,CAAC;aAChB;AACD,gBAAI,CAAC,UAAU,CAAC,MAAM,GAAG,OAAO,CAAC;SACpC;KACJ;AACD,QAAI,EAAC,gBAAU;AACX,YAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AACrB,YAAG,IAAI,CAAC,IAAI,EAAC;AACT,gBAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;SACnC;KACJ;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\n    extends: cc.Component,\n    properties: {\n        target:cc.Node,\n        // foo: {\n        //    default: null,\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        _isShow:false,\n        lblContent:cc.Label,\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        if(cc.vv == null){\n            return null;\n        }\n        \n        cc.vv.wc = this;\n        this.node.active = this._isShow;\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    update: function (dt) {\n        this.target.rotation = this.target.rotation - dt*45;\n    },\n    \n    show:function(content){\n        this._isShow = true;\n        if(this.node){\n            this.node.active = this._isShow;   \n        }\n        if(this.lblContent){\n            if(content == null){\n                content = \"\";\n            }\n            this.lblContent.string = content;\n        }\n    },\n    hide:function(){\n        this._isShow = false;\n        if(this.node){\n            this.node.active = this._isShow;   \n        }\n    }\n});\n"
  ]
}