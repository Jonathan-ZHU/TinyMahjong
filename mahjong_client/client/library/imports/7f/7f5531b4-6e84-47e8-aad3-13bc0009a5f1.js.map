{"version":3,"sources":["assets/scripts/components/ReConnect.js"],"names":["cc","Class","extends","Component","properties","_reconnect","_lblTip","_lastPing","onLoad","find","getComponent","Label","self","fnTestServerOn","vv","net","test","ret","roomId","userMgr","oldRoomId","enterRoom","director","loadScene","setTimeout","fn","data","node","off","active","console","log","on","update","dt","t","Math","floor","Date","now","string","i"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,oBAAW,IAXH;AAYRC,iBAAQ,IAZA;AAaRC,mBAAU;AAbF,KAHP;;AAmBL;AACAC,YAAQ,kBAAY;AAChB,aAAKH,UAAL,GAAkBL,GAAGS,IAAH,CAAQ,kBAAR,CAAlB;AACA,aAAKH,OAAL,GAAeN,GAAGS,IAAH,CAAQ,sBAAR,EAAgCC,YAAhC,CAA6CV,GAAGW,KAAhD,CAAf;AACA,YAAIC,OAAO,IAAX;;AAEA,YAAIC,iBAAiB,SAAjBA,cAAiB,GAAU;AAC3Bb,eAAGc,EAAH,CAAMC,GAAN,CAAUC,IAAV,CAAe,UAASC,GAAT,EAAa;AACzB,oBAAGA,GAAH,EAAO;AACH,wBAAIC,SAASlB,GAAGc,EAAH,CAAMK,OAAN,CAAcC,SAA3B;AACC,wBAAIF,UAAU,IAAd,EAAmB;AACflB,2BAAGc,EAAH,CAAMK,OAAN,CAAcC,SAAd,GAA0B,IAA1B;AACApB,2BAAGc,EAAH,CAAMK,OAAN,CAAcE,SAAd,CAAwBH,MAAxB;AACH,qBAHD,MAGK;AACDlB,2BAAGsB,QAAH,CAAYC,SAAZ,CAAsB,MAAtB;AACH;AACD;AACA;AACJ,iBAVD,MAWI;AACAC,+BAAWX,cAAX,EAA0B,KAA1B;AACH;AACH,aAfD;AAgBH,SAjBD;;AAmBA,YAAIY,KAAK,SAALA,EAAK,CAASC,IAAT,EAAc;AACnBd,iBAAKe,IAAL,CAAUC,GAAV,CAAc,YAAd,EAA2BH,EAA3B;AACAb,iBAAKP,UAAL,CAAgBwB,MAAhB,GAAyB,IAAzB;AACAhB;AACH,SAJD;AAKAiB,gBAAQC,GAAR,CAAY,eAAZ;AACA,aAAKJ,IAAL,CAAUK,EAAV,CAAa,YAAb,EAA0BP,EAA1B;AACH,KAnDI;AAoDL;AACAQ,YAAQ,gBAAUC,EAAV,EAAc;AAClB,YAAG,KAAK7B,UAAL,CAAgBwB,MAAnB,EAA0B;AACtB,gBAAIM,IAAIC,KAAKC,KAAL,CAAWC,KAAKC,GAAL,KAAa,IAAxB,IAAgC,CAAxC;AACA,iBAAKjC,OAAL,CAAakC,MAAb,GAAsB,iBAAtB;AACA,iBAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAIN,CAAnB,EAAsB,EAAGM,CAAzB,EAA2B;AACvB,qBAAKnC,OAAL,CAAakC,MAAb,IAAuB,GAAvB;AACH;AACJ;AACJ;AA7DI,CAAT","file":"unknown","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        _reconnect:null,\n        _lblTip:null,\n        _lastPing:0,\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this._reconnect = cc.find(\"Canvas/reconnect\");\n        this._lblTip = cc.find(\"Canvas/reconnect/tip\").getComponent(cc.Label);\n        var self = this;\n        \n        var fnTestServerOn = function(){\n            cc.vv.net.test(function(ret){\n               if(ret){\n                   var roomId = cc.vv.userMgr.oldRoomId \n                    if( roomId != null){\n                        cc.vv.userMgr.oldRoomId = null;\n                        cc.vv.userMgr.enterRoom(roomId);\n                    }else{\n                        cc.director.loadScene('hall'); \n                    }\n                    //cc.director.loadScene('hall');  \n                    //cc.director.loadScene('mjgame');  \n               }\n               else{\n                   setTimeout(fnTestServerOn,10000);\n               }\n            });\n        }\n        \n        var fn = function(data){\n            self.node.off('disconnect',fn);\n            self._reconnect.active = true;\n            fnTestServerOn();\n        };\n        console.log(\"adasfdasdfsdf\");\n        this.node.on('disconnect',fn);\n    },\n    // called every frame, uncomment this function to activate update callback\n    update: function (dt) {\n        if(this._reconnect.active){\n            var t = Math.floor(Date.now() / 1000) % 4;\n            this._lblTip.string = \"与服务器断开连接，正在尝试重连\";\n            for(var i = 0; i < t; ++ i){\n                this._lblTip.string += '.';\n            }\n        }\n    },\n});\n"]}