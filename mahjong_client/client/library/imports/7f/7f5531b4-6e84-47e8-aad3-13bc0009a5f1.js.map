{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;;AAWR,kBAAU,EAAC,IAAI;AACf,eAAO,EAAC,IAAI;AACZ,iBAAS,EAAC,CAAC;KACd;;;AAGD,UAAM,EAAE,kBAAY;AAChB,YAAI,CAAC,UAAU,GAAG,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;AAC9C,YAAI,CAAC,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;AACtE,YAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,YAAI,cAAc,GAAG,SAAjB,cAAc,GAAa;AAC3B,cAAE,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,UAAS,GAAG,EAAC;AACzB,oBAAG,GAAG,EAAC;AACF,sBAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;iBAClC,MACG;AACA,8BAAU,CAAC,cAAc,EAAC,IAAI,CAAC,CAAC;iBACnC;aACH,CAAC,CAAC;SACN,CAAA;;AAED,YAAI,EAAE,GAAG,SAAL,EAAE,CAAY,IAAI,EAAC;AACnB,gBAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAC,EAAE,CAAC,CAAC;AAC/B,gBAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC;AAC9B,0BAAc,EAAE,CAAC;SACpB,CAAC;AACF,eAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;AAC7B,YAAI,CAAC,IAAI,CAAC,EAAE,CAAC,YAAY,EAAC,EAAE,CAAC,CAAC;KACjC;;AAED,UAAM,EAAE,gBAAU,EAAE,EAAE;AAClB,YAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAC;AACtB,gBAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AAC1C,gBAAI,CAAC,OAAO,CAAC,MAAM,GAAG,iBAAiB,CAAC;AACxC,iBAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAG,CAAC,EAAC;AACvB,oBAAI,CAAC,OAAO,CAAC,MAAM,IAAI,GAAG,CAAC;aAC9B;SACJ;KACJ;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        _reconnect:null,\n        _lblTip:null,\n        _lastPing:0,\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this._reconnect = cc.find(\"Canvas/reconnect\");\n        this._lblTip = cc.find(\"Canvas/reconnect/tip\").getComponent(cc.Label);\n        var self = this;\n        \n        var fnTestServerOn = function(){\n            cc.vv.net.test(function(ret){\n               if(ret){\n                    cc.director.loadScene('hall');                \n               }\n               else{\n                   setTimeout(fnTestServerOn,3000);\n               }\n            });\n        }\n        \n        var fn = function(data){\n            self.node.off('disconnect',fn);\n            self._reconnect.active = true;\n            fnTestServerOn();\n        };\n        console.log(\"adasfdasdfsdf\");\n        this.node.on('disconnect',fn);\n    },\n    // called every frame, uncomment this function to activate update callback\n    update: function (dt) {\n        if(this._reconnect.active){\n            var t = Math.floor(Date.now() / 1000) % 4;\n            this._lblTip.string = \"与服务器断开连接，正在尝试重连\";\n            for(var i = 0; i < t; ++ i){\n                this._lblTip.string += '.';\n            }\n        }\n    },\n});\n"
  ]
}