{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;;AAWR,cAAM,EAAC,IAAI;AACX,aAAK,EAAC,IAAI;AACV,kBAAU,EAAC,CAAC,CAAC;KAChB;;;AAGD,UAAM,EAAE,kBAAY;AAChB,YAAI,CAAC,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;AAC3C,YAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;;AAE3B,YAAI,CAAC,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;;AAEtE,YAAI,IAAI,GAAG,IAAI,CAAC;AAChB,YAAI,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAC,UAAS,IAAI,EAAC;AACrC,gBAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;AACvB,gBAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;AAC1B,gBAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;AAC5B,gBAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;SACjC,CAAC,CAAC;KACN;;;AAGD,UAAM,EAAE,gBAAU,EAAE,EAAE;AACnB,YAAG,IAAI,CAAC,UAAU,GAAG,CAAC,EAAC;AACnB,gBAAI,CAAC,UAAU,IAAI,EAAE,CAAC;AACtB,gBAAG,IAAI,CAAC,UAAU,GAAG,CAAC,EAAC;AACnB,oBAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;aAC9B;SACJ;KACH;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        _guohu:null,\n        _info:null,\n        _guohuTime:-1,\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this._guohu = cc.find(\"Canvas/tip_notice\");\n        this._guohu.active = false;\n        \n        this._info = cc.find(\"Canvas/tip_notice/info\").getComponent(cc.Label);\n        \n        var self = this;\n        this.node.on('push_notice',function(data){\n            var data = data.detail;\n            self._guohu.active = true;\n            self._guohuTime = data.time;\n            self._info.string = data.info;\n        });\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    update: function (dt) {\n       if(this._guohuTime > 0){\n           this._guohuTime -= dt;\n           if(this._guohuTime < 0){\n               this._guohu.active = false;\n           }\n       }\n    },\n});\n"
  ]
}